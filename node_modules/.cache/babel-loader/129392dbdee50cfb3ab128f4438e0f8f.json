{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh_HD/developer/react/incubator/ignat/src/p2-homeworks/h4/HW4.tsx\";\nimport React, { useState } from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\nimport s from \"./HW4.module.css\";\n\nfunction HW4() {\n  const [text, setText] = useState(\"\");\n  const error = text ? \"\" : \"incorrect value\";\n\n  const showAlert = () => {\n    if (error) {\n      alert(\"введите текст...\");\n    } else {\n      alert(text); // если нет ошибки показать текст\n\n      setText('');\n    }\n  };\n\n  const [checked, setChecked] = useState(false);\n\n  const testOnChange = e => setChecked(e.currentTarget.checked);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), \"homeworks 4\", /*#__PURE__*/React.createElement(\"div\", {\n    className: s.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SuperInputText, {\n    value: text,\n    onChangeText: setText,\n    onEnter: showAlert,\n    error: error // className={s.blue} // проверьте, рабоет ли смешивание классов\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SuperButton, {\n    red: true // пропсу с булевым значением не обязательно указывать true\n    ,\n    onClick: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"delete \"), /*#__PURE__*/React.createElement(SuperCheckbox, {\n    checked: checked,\n    onChangeChecked: setChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"some text \"), /*#__PURE__*/React.createElement(SuperCheckbox, {\n    checked: checked,\n    onChange: testOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default HW4;","map":{"version":3,"sources":["/Volumes/Macintosh_HD/developer/react/incubator/ignat/src/p2-homeworks/h4/HW4.tsx"],"names":["React","useState","SuperInputText","SuperButton","SuperCheckbox","s","HW4","text","setText","error","showAlert","alert","checked","setChecked","testOnChange","e","currentTarget","column"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AAEA,OAAOC,CAAP,MAAc,kBAAd;;AAEA,SAASC,GAAT,GAAe;AAEX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAMQ,KAAK,GAAGF,IAAI,GAAG,EAAH,GAAQ,iBAA1B;;AACA,QAAMG,SAAS,GAAG,MAAM;AACpB,QAAID,KAAJ,EAAW;AACPE,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,KAFD,MAEO;AACHA,MAAAA,KAAK,CAACJ,IAAD,CAAL,CADG,CACU;;AACbC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAPD;;AASA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAU,KAAV,CAAtC;;AACA,QAAMa,YAAY,GAAIC,CAAD,IAAsCF,UAAU,CAACE,CAAC,CAACC,aAAF,CAAgBJ,OAAjB,CAArE;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,8BAII;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAKV,IADd;AAEI,IAAA,YAAY,EAAKC,OAFrB;AAGI,IAAA,OAAO,EAAKE,SAHhB;AAII,IAAA,KAAK,EAAKD,KAJd,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAWI,oBAAC,WAAD;AACE,IAAA,GAAG,MADL,CACM;AADN;AAEE,IAAA,OAAO,EAAEC,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,eAoBI,oBAAC,aAAD;AACI,IAAA,OAAO,EAAEE,OADb;AAEI,IAAA,eAAe,EAAEC,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ,eA4BI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,QAAQ,EAAIE,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CAJJ,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,CADJ;AA8CH;;AAED,eAAeR,GAAf","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nimport s from \"./HW4.module.css\";\n\nfunction HW4() {\n\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"incorrect value\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText('');\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value = { text }\n                    onChangeText = { setText }\n                    onEnter = { showAlert }\n                    error = { error }\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                  red // пропсу с булевым значением не обязательно указывать true\n                  onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text { /*// этот текст попадёт в children*/ }\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox\n                  checked={checked}\n                  onChange = {testOnChange}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n        </div>\n    );\n}\n\nexport default HW4;\n"]},"metadata":{},"sourceType":"module"}