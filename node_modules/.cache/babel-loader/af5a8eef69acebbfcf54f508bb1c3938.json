{"ast":null,"code":"import _objectWithoutProperties from\"/Volumes/Macintosh_HD/developer/react/incubator/ignat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import s from\"./SuperCheckbox.module.css\";// тип пропсов обычного инпута\nvar SuperCheckbox=function SuperCheckbox(_ref){var type=_ref.type,onChange=_ref.onChange,onChangeChecked=_ref.onChangeChecked,className=_ref.className,spanClassName=_ref.spanClassName,children=_ref.children,restProps=_objectWithoutProperties(_ref,[\"type\",\"onChange\",\"onChangeChecked\",\"className\",\"spanClassName\",\"children\"]);var onChangeCallback=function onChangeCallback(e){onChange// если есть пропс onChange\n&&onChange(e);// то передать ему е (поскольку onChange не обязателен)\nonChangeChecked&&onChangeChecked(e.currentTarget.checked);};var finalInputClassName=\"\".concat(s.checkbox,\" \").concat(className?className:\"\");return/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",Object.assign({type:\"checkbox\",className:finalInputClassName,onChange:onChangeCallback},restProps)),children&&/*#__PURE__*/React.createElement(\"span\",{className:s.spanClassName},children))// благодаря label нажатие на спан передастся в инпут\n;};export default SuperCheckbox;","map":{"version":3,"sources":["/Volumes/Macintosh_HD/developer/react/incubator/ignat/src/p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx"],"names":["React","s","SuperCheckbox","type","onChange","onChangeChecked","className","spanClassName","children","restProps","onChangeCallback","e","currentTarget","checked","finalInputClassName","checkbox"],"mappings":"gMAAA,MAAOA,CAAAA,KAAP,KAAmF,OAAnF,CACA,MAAOC,CAAAA,CAAP,KAAc,4BAAd,CAEA;AAQA,GAAMC,CAAAA,aAA+C,CAAG,QAAlDA,CAAAA,aAAkD,MAW7C,IATGC,CAAAA,IASH,MATGA,IASH,CARGC,QAQH,MARGA,QAQH,CAPGC,eAOH,MAPGA,eAOH,CANGC,SAMH,MANGA,SAMH,CALGC,aAKH,MALGA,aAKH,CAJGC,QAIH,MAJGA,QAIH,CAFMC,SAEN,6GAEP,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAEC,CAAF,CAAwC,CAC/DP,QAAS;AAAD,EACLA,QAAQ,CAACO,CAAD,CADX,CACgB;AAEhBN,eAAe,EAAIA,eAAe,CAAEM,CAAC,CAACC,aAAF,CAAgBC,OAAlB,CAAlC,CACD,CALD,CAOA,GAAMC,CAAAA,mBAAmB,WAAMb,CAAC,CAACc,QAAR,aAAoBT,SAAS,CAAGA,SAAH,CAAe,EAA5C,CAAzB,CAEA,mBACI,8CACI,2CACI,IAAI,CAAK,UADb,CAGI,SAAS,CAAKQ,mBAHlB,CAII,QAAQ,CAAKJ,gBAJjB,EAKQD,SALR,EADJ,CAQKD,QAAQ,eAAI,4BAAM,SAAS,CAAEP,CAAC,CAACM,aAAnB,EAAmCC,QAAnC,CARjB,CASS;AAVb,CAYH,CAlCD,CAoCA,cAAeN,CAAAA,aAAf","sourcesContent":["import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n          {\n              type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n              onChange,\n              onChangeChecked,\n              className,\n              spanClassName,\n              children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n              ...restProps// все остальные пропсы попадут в объект restProps\n          }\n      ) => {\n\n    const onChangeCallback = ( e: ChangeEvent<HTMLInputElement> ) => {\n      onChange // если есть пропс onChange\n      && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n      onChangeChecked && onChangeChecked( e.currentTarget.checked);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type = { \"checkbox\" }\n\n                className = { finalInputClassName }\n                onChange = { onChangeCallback }\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;"]},"metadata":{},"sourceType":"module"}