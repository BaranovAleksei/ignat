{"version":3,"sources":["p2-homeworks/h5/Header.module.sass","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/pages/Error404.module.sass","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.sass","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.sass","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.js","p2-homeworks/h8/HW8.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","inputClassName","finalSpanClassName","s","finalInputClassName","errorInput","overlayInput","placeholder","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","style","width","outline","border","borderRadius","fontSize","margin","padding","display","SuperButton","red","finalClassName","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","onClick","SuperSelect","options","onChangeOption","mappedOptions","map","index","selectOverlay","SuperRadio","name","o","i","buttonOverlay","arr","HW7","PreJunior","Error404","pageError","tilt","max","tiltInner","src","alt","initialPeople","_id","age","HW8","people","setPeople","finalPeople","p","action","homeWorkReducer","payload","Clock","setTimerId","show","stop","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","HW10","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","HW11","value1","value2","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","nav","menuHover","items","item","activeClassName","activeLink","HW5","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f9fc8721.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3GoKr\",\"menuHover\":\"Header_menuHover__TqR6g\",\"items\":\"Header_items__3iHKw\",\"item\":\"Header_item__3RWU3\",\"activeLink\":\"Header_activeLink__3_F4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayInput\":\"SuperInputText_overlayInput__2ODZd\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageError\":\"Error404_pageError__2d0KO\",\"tilt\":\"Error404_tilt__3_Esn\",\"tiltInner\":\"Error404_tiltInner__1Rm7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectOverlay\":\"SuperSelect_selectOverlay__1Bpyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonOverlay\":\"SuperRadio_buttonOverlay__1SG6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2K0wQ\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    inputClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName, inputClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${ spanClassName ? spanClassName : ''}`;\n\n    const finalInputClassName = `${s.errorInput} ${ className ? className : ''}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.overlayInput}>\n            <input\n                placeholder = {'enter your text'}\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={ finalInputClassName }\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            { error && <span className={finalSpanClassName}> { error } </span> }\n        </div>\n\n    );\n}\n\nexport default SuperInputText;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(true) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`\n\n    const spanClassUndef = {\n        border: `1px solid #4caf50`,\n        borderRadius: '5px',\n        fontSize: '1.2em',\n        margin: '10px 0',\n        padding: '5px 10px',\n        display: 'block'\n    }\n\n    return (\n        <div style = {{width: '300px'}}>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        // add style\n                        style = {{  width: '100%',\n                                    outline: 'none'}}\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        // add style var2\n                        style = {spanClassUndef}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </div>\n    )\n};\n\nexport default SuperEditableSpan;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n      red,\n      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nexport const state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport { restoreState, saveState } from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    }\n    const restore = () => {\n      setValue('')\n      // restoreState('editable-span-value', '')\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton style={{margin: '10px 5px'}} onClick={save}>save</SuperButton>\n            <SuperButton style={{margin: '10px 5px'}} onClick={restore}>restore</SuperButton>\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            {/*<hr/>*/}\n        </div>\n    );\n}\n\nexport default HW6;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\"\nimport s from './SuperSelect.module.sass'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options: Array<string>\n    onChangeOption: (option: string) => void\n}\n\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange,\n        onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = [\n      options.map( (options, index) => <option key={index}> {options} </option>)\n    ]; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n      const value = e.currentTarget.value\n      onChangeOption(value)\n    }\n\n    return (\n        <div className={s.selectOverlay}>\n          <select  onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n          </select>\n        </div>\n\n    )\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './SuperRadio.module.sass'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options: Array<string>\n    onChangeOption: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n      const value = e.currentTarget.value\n      onChangeOption(value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                // name, checked, value, onChange\n                name={o}\n                value={o}\n                checked={value === o}\n                onChange={onChangeCallback}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <div className={s.buttonOverlay}>\n            {mappedOptions}\n        </div>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            {/*<hr/>*/}\n        </div>\n    );\n}\n\nexport default HW7;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from '../../h6/HW6';\nimport HW7 from \"../../h7/HW7\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW6/>\n            <HW7/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport s from './Error404.module.sass';\nimport Tilt from 'react-tilt';\n\nfunction Error404() {\n    return (\n        <div className={s.pageError}>\n            {/*<Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 250, width: 250 }} >*/}\n            <Tilt className={s.tilt} options={{ max : 20 }} >\n                <div className={s.tiltInner}>\n                    <img src='https://luchchemical.net/images/404.png' alt='404'/>\n                </div>\n            </Tilt>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            some name, age\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div>sort down</div>\n\n            check 18\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","export const homeWorkReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        case \"sort\": {\n\n            return state\n        }\n        case \"check\": {\n\n            return state\n        }\n        default: return state\n    }\n};","import React, {useState} from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0);\n    const [date, setDate] = useState<Date>();\n    const [show, setShow] = useState<boolean>(false);\n\n    const stop = () => {\n        // stop\n    }\n    const start = () => {\n        stop();\n        const id: number = window.setInterval(() => {\n            // setDate\n        }, 1000);\n        setTimerId(id);\n    }\n\n    const onMouseEnter = () => {\n        // show\n    };\n    const onMouseLeave = () => {\n        // close\n    };\n\n    const stringTime = \"Time\"; // fix with date\n    const stringDate = \"Date\"; // fix with date\n\n    return (\n        <div>\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n            </div>\n\n            {show && (\n                <div>\n                    {stringDate}\n                </div>\n            )}\n\n            <SuperButton onClick={start}>start</SuperButton>\n            <SuperButton onClick={stop}>stop</SuperButton>\n\n        </div>\n    );\n}\n\nexport default Clock;\n","import React from \"react\";\nimport Clock from \"./Clock\";\n\nfunction HW9() {\n    return (\n        <div>\n            <hr/>\n            homeworks 9\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW9;\n","import React from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nfunction HW10() {\n    // useSelector, useDispatch\n    const loading = false;\n\n    const setLoading = () => {\n        // dispatch\n        // setTimeout\n        console.log(\"loading...\");\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 10\n\n            {/*should work (должно работать)*/}\n            {loading\n                ? (\n                    <div>крутилка...</div>\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW10;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import React from \"react\";\n\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: [number, number]) => void\n    value?: [number, number]\n    // min, max, step, disable, ...\n}\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        onChangeRange, value,\n        // min, max, step, disable, ...\n    }\n) => {\n    // сделать самому, можно подключать библиотеки\n\n    return (\n        <>\n            DoubleRange\n        </>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, {useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\n\nfunction HW11() {\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(100);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    // сделать так чтоб value1 изменялось\n                />\n            </div>\n\n            <div>\n                <span>{value1}</span>\n                <SuperDoubleRange\n                    // сделать так чтоб value1 и value2 изменялось\n                />\n                <span>{value2}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11;\n","import React from \"react\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW11 from \"../../h11/HW11\";\n\nfunction Junior() {\n\treturn (\n\t\t<div>\n\t\t\t<HW8/>\n\t\t\t<HW9/>\n\t\t\t<HW10/>\n\t\t\t<HW11/>\n\t\t</div>\n\t);\n}\n\nexport default Junior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction JuniorPlus() {\n\treturn (\n\t\t<div>\n\t\t\t{/*<HW1/>*/}\n\t\t\t{/*<HW2/>*/}\n\t\t\t{/*<HW3/>*/}\n\t\t\t{/*<HW4/>*/}\n\t\t\t{/*<HW6/>*/}\n\t\t</div>\n\t);\n}\n\nexport default JuniorPlus;","import React from \"react\";\nimport PreJunior from './pages/PreJunior';\nimport Error404 from \"./pages/Error404\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={ () => <Redirect to={ PATH.PRE_JUNIOR }/> }/>\n\n            <Route path={ PATH.PRE_JUNIOR } render={ () => <PreJunior/> } />\n            <Route path={ PATH.JUNIOR } render={ () => <Junior /> } />\n            <Route path={ PATH.JUNIOR_PLUS } render={ ()=> <JuniorPlus/> } />\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={ () => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport s from './Header.module.sass'\nimport { PATH } from './Routes'\n\nfunction Header() {\n    return (\n        <div className={s.nav}>\n          <button className={ s.menuHover }>Меню</button>\n          <div className={s.items}>\n            <div className={ s.item }>\n              <NavLink to= { PATH.PRE_JUNIOR } activeClassName = { s.activeLink }>PreJunior</NavLink>\n            </div>\n            <div className={ s.item }>\n              <NavLink to={ PATH.JUNIOR } activeClassName = { s.activeLink }>Junior</NavLink>\n            </div>\n            <div className={ s.item }>\n              <NavLink to={ PATH.JUNIOR_PLUS } activeClassName = { s.activeLink }>JuniorPlus</NavLink>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n              <Header/>\n              <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n// import HW1 from \"../../../p2-homeworks/h1/HW1\";\n// import HW2 from '../../../p2-homeworks/h2/HW2';\n// import HW3 from '../../../p2-homeworks/h3/HW3';\n// import HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW5/>\n       </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}